{"version":3,"file":"static/js/159.4615721e.chunk.js","mappings":"qJAEA,MAuDA,EAvDyBA,KACrB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,GAC/BC,GAAUC,EAAAA,EAAAA,QAA8B,OACvCC,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,GAOrCK,EAAkBA,KACpBN,GAAU,EAAM,EAUpB,OANAO,EAAAA,EAAAA,YAAU,KACFL,EAAQM,SACRH,EAAaH,EAAQM,QAAQC,YACjC,GACD,CAACV,KAGAW,EAAAA,EAAAA,MAAA,OAAKC,UAAW,+IAA+IC,SAAA,EAC3JC,EAAAA,EAAAA,KAAA,OACIF,UAAW,wFAAuFZ,EAAS,YAAc,QACzHe,QApBaC,KACrBhB,GAAUiB,OAAOC,SAAS,EAAG,GAC7BjB,GAAWkB,IAAUA,GAAK,EAkBQN,UAE1BC,EAAAA,EAAAA,KAAA,OAAKM,IAAKC,yCAA8CC,IAAI,OAAOV,UAAU,qBAGjFE,EAAAA,EAAAA,KAAA,OACIS,IAAKpB,EACLS,UAAW,6EAA4EZ,EAAS,gBAAkB,2BAClHwB,MAAO,CACHC,MAAO,GAAGpB,MACVqB,WAAY1B,EAAS,UAAY,SACjC2B,QAAW3B,EAAS,KAAO,OAAnB,KACR4B,WAAY,UACdf,SAED,CAAC,MAAO,OAAQ,QAAS,OAAQ,SAASgB,KAAKC,IAC5ChB,EAAAA,EAAAA,KAAA,KAEIiB,KAAM,IAAID,EAAKE,gBACfpB,UAAU,wFACVG,QAASR,EAAgBM,SAExBiB,GALIA,SASf,C","sources":["components/Navbar.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst Navbar: React.FC = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const textRef = useRef<HTMLDivElement | null>(null);\r\n    const [textWidth, setTextWidth] = useState(0);\r\n\r\n    const handleImageClick = () => {\r\n        isOpen && window.scrollTo(0, 0);\r\n        setIsOpen((prev) => !prev); // Toggle open/close state\r\n    };\r\n\r\n    const handleLinkClick = () => {\r\n        setIsOpen(false); // Close on link click\r\n    };\r\n\r\n    // Effect to update text width when isOpen state changes\r\n    useEffect(() => {\r\n        if (textRef.current) {\r\n            setTextWidth(textRef.current.scrollWidth); // Get the dynamic width of text container\r\n        }\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <nav className={`fixed bottom-[10px] left-1/2 transform -translate-x-1/2 bg-transparent flex flex-col items-center z-20 min-w-max transition-all duration-300`}>\r\n            <div \r\n                className={`text-xl font-bold w-12 h-12 rounded-full cursor-pointer transition-all duration-300 ${isOpen ? 'mb-[65px]' : 'mb-0'}`}\r\n                onClick={handleImageClick}\r\n            >\r\n                <img src={process.env.PUBLIC_URL + \"/img/ring-1_2.png\"} alt=\"logo\" className=\"grow-shrink-1\" />\r\n            </div>\r\n            {/* Hidden by default, appears above the navbar */}\r\n            <div \r\n                ref={textRef} \r\n                className={`absolute left-1/2 transform -translate-x-1/2 transition-all duration-300 ${isOpen ? 'translate-y-0' : 'translate-y-4 opacity-0'}`}\r\n                style={{\r\n                    width: `${textWidth}px`,\r\n                    visibility: isOpen ? 'visible' : 'hidden', // Control visibility\r\n                    bottom: `${isOpen ? '30' : '-40'}px`, // Keep it positioned just under the image\r\n                    whiteSpace: 'nowrap', // Prevent wrapping for a cleaner look\r\n                }}\r\n            >\r\n                {['Who', 'What', 'Which', 'Whiz', 'Where'].map((item) => (\r\n                    <a\r\n                        key={item}\r\n                        href={`#${item.toLowerCase()}`}\r\n                        className=\"px-4 py-2 bg-gray-800 text-white rounded-md hover:bg-gray-700 transition duration-300\"\r\n                        onClick={handleLinkClick}\r\n                    >\r\n                        {item}\r\n                    </a>\r\n                ))}\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;"],"names":["Navbar","isOpen","setIsOpen","useState","textRef","useRef","textWidth","setTextWidth","handleLinkClick","useEffect","current","scrollWidth","_jsxs","className","children","_jsx","onClick","handleImageClick","window","scrollTo","prev","src","process","alt","ref","style","width","visibility","bottom","whiteSpace","map","item","href","toLowerCase"],"sourceRoot":""}