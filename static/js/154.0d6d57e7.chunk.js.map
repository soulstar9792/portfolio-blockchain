{"version":3,"file":"static/js/154.0d6d57e7.chunk.js","mappings":"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","sources":["components/Which.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport './styles.css';\r\n\r\ninterface Project {\r\n  name: string;\r\n  image: string;\r\n  description: string;\r\n  website?: string;\r\n  source?: string;\r\n  skills?: string[];\r\n}\r\n\r\nconst projects: Project[] = require('../constants/projects.json');\r\n\r\nconst ProjectsPerPage = 6; // Total items to be displayed per page (2 rows of 3 items each)\r\n\r\nconst Which: React.FC = () => {\r\n  const [titleAnimationStart, setTitleAnimationStart] = useState(false);\r\n  const [visibleItem, setVisibleItem] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const sectionRef = useRef<HTMLDivElement>(null);\r\n  const imgRef = useRef<HTMLDivElement>(null);\r\n  const hichRef = useRef<HTMLDivElement>(null);\r\n  const iRef = useRef<HTMLDivElement>(null);\r\n  const builtRef = useRef<HTMLDivElement>(null);\r\n  const [animateEnabled, setAnimateEnabled] = useState(false);\r\n\r\n  const handleScroll = (entries: IntersectionObserverEntry[]) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        setTitleAnimationStart(true);\r\n        setAnimateEnabled(false);\r\n\r\n        setTimeout(() => {\r\n          setAnimateEnabled(true);\r\n        }, 500);\r\n\r\n        let index = 0;\r\n        const interval = setInterval(() => {\r\n          if (index <= projects.length) {\r\n            setVisibleItem(index++);\r\n          } else {\r\n            clearInterval(interval);\r\n          }\r\n        }, 500);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(handleScroll, { threshold: 0.1 });\r\n    if (sectionRef.current) {\r\n      observer.observe(sectionRef.current);\r\n    }\r\n    return () => {\r\n      if (sectionRef.current) {\r\n        let current = sectionRef.current;\r\n        observer.unobserve(current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleAnimation = (ref: React.RefObject<HTMLSpanElement>) => {\r\n    if (animateEnabled && ref.current) {\r\n      if (ref.current.classList.contains('animate-yesIm')) {\r\n        return;\r\n      }\r\n      \r\n      const classes = Array.from(ref.current.classList);\r\n      classes.forEach(cls => {\r\n        if (cls.startsWith('animate') && ref.current) {\r\n          ref.current.classList.remove(cls);\r\n        }\r\n      });\r\n      ref.current.classList.add('animate-yesIm');\r\n\r\n      setTimeout(() => {\r\n        ref.current?.classList.remove('animate-yesIm');\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  // Calculate current projects to display based on current page\r\n  const startIndex = currentPage * ProjectsPerPage;\r\n  const currentProjects = projects.slice(startIndex, startIndex + ProjectsPerPage);\r\n\r\n  // Handle page change\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  // Render pagination buttons\r\n  const renderPaginationButtons = () => {\r\n    const totalPages = Math.ceil(projects.length / ProjectsPerPage);\r\n    return (\r\n      <div className=\"flex justify-center space-x-2 mt-4\">\r\n        {Array.from({ length: totalPages }).map((_, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handlePageChange(index)}\r\n            className={`w-8 h-8 rounded-full flex items-center justify-center hover:bg-gray-800 ${currentPage === index ? 'bg-gray-700 text-white' : 'bg-gray-900'} transition duration-300 ${visibleItem >= ProjectsPerPage ? 'animate-fade-in' : 'opacity-0'}`}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section ref={sectionRef} id=\"which\" className=\"w-full py-20 min-h-screen\">\r\n      <h2 className=\"text-4xl sm:text-6xl text-center flex justify-center items-center mb-20\">\r\n        <div\r\n          className={`w-[66px] sm:w-[100px] rounded-full cursor-pointer ${titleAnimationStart ? 'animate-slide-in-left' : 'invisible'} transition-all duration-300`}\r\n          onClick={() => handleAnimation(imgRef)}  ref={imgRef}\r\n        >\r\n          <img src={process.env.PUBLIC_URL + \"/img/ring-1_2.png\"} alt=\"logo\" className=\"grow-shrink-1\" />\r\n        </div>\r\n        <span onClick={() => handleAnimation(hichRef)} ref={hichRef} className={`z-10 transition-transform duration-1000 ${titleAnimationStart ? 'animate-slide-in-left' : 'invisible'}`}>\r\n          hich\r\n        </span>\r\n        <span onClick={() => handleAnimation(iRef)} ref={iRef} className={`transition-transform duration-1000 ${titleAnimationStart ? 'animate-bounce' : 'invisible'}`}>\r\n          ¬†I¬†\r\n        </span>\r\n        <span onClick={() => handleAnimation(builtRef)} ref={builtRef} className={`transition-transform duration-1000 ${titleAnimationStart ? 'animate-slide-in-right' : 'invisible'}`}>\r\n          Built\r\n        </span>\r\n      </h2>\r\n      <div className=\"grid xl:grid-cols-3 md:grid-cols-2 sm:grid-cols-1 gap-8 my-built px-5 xl:p-0 md:px-20 sm:px-10\">\r\n        {currentProjects.map((project, index) => (\r\n          <div key={project.name} title={project.description} className={`relative bg-gray-800 hover:bg-gray-700 transition duration-1000 my-box-shadow clickable hover-contain  ${visibleItem > index? 'opacity-100 animate-slide-in' : 'opacity-0'}`}>\r\n            <img src={process.env.PUBLIC_URL + project.image} alt={project.name} className=\"w-full h-auto\" />\r\n            <div className=\"absolute flex space flex-col items-center justify-between bg-gray-900 opacity-100 transition duration-1000 hover-cover text-2xl\">\r\n              <p className='text-md md:text-lg text-center mt-4'>{project.name}</p>\r\n              <div className=\"flex space-x-2\">\r\n                {project.website && <a href={project.website} target='_blank' rel=\"noopener noreferrer\" className=\"text-blue-400 hover:cursor-pointer hover:-mt-1 hover:mb-1 hover:underline\">üåê</a>}\r\n                {/* {project.source && <a href={project.source} target='_blank' rel=\"noopener noreferrer\" className=\"text-green-400 hover:-mt-1 hover:underline\">üíª</a>} */}\r\n              </div>\r\n              {project.skills && <div className=\"flex space-x-2 flex-wrap content-between mb-2\">\r\n                <div></div>\r\n                {project.skills.map((skill, index) => (\r\n                  <div key={index} className=\"bg-gray-700 text-white text-xs px-2 py-1 mt-1 rounded-full hover:bg-gray-600 hover:cursor-pointer\">\r\n                    {skill}\r\n                  </div>\r\n                ))}\r\n              </div>}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {renderPaginationButtons()}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Which;"],"names":["projects","require","Which","titleAnimationStart","setTitleAnimationStart","useState","visibleItem","setVisibleItem","currentPage","setCurrentPage","sectionRef","useRef","imgRef","hichRef","iRef","builtRef","animateEnabled","setAnimateEnabled","handleScroll","entries","forEach","entry","isIntersecting","setTimeout","index","interval","setInterval","length","clearInterval","useEffect","observer","IntersectionObserver","threshold","current","observe","unobserve","handleAnimation","ref","classList","contains","Array","from","cls","startsWith","remove","add","_ref$current","startIndex","currentProjects","slice","_jsxs","id","className","children","_jsx","onClick","src","process","alt","map","project","title","description","image","name","website","href","target","rel","skills","skill","renderPaginationButtons","totalPages","Math","ceil","_"],"sourceRoot":""}