{"version":3,"file":"static/js/473.674ca78d.chunk.js","mappings":"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","sources":["components/Whiz.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';  // Importing useRef and useEffect\r\n\r\nconst skills = [\r\n  { name: 'Solidity', level: 5, class: 'devicon-solidity-plain colored'},\r\n  { name: 'Node', level: 5, class: 'devicon-nodejs-plain colored' },\r\n  { name: 'Python', level: 4, class: 'devicon-python-plain colored' },\r\n  { name: 'Go', level: 3, class: 'devicon-go-original-wordmark colored' },\r\n  { name: 'Rust', level: 3, class: 'devicon-rust-line'},\r\n  { name: 'Ethereum', level: 5, path: '/img/ethereum.png'},\r\n  { name: 'Hyperledger', level: 4, path: '/img/hyperledger.png'},\r\n  { name: 'EOS', level: 4, path: '/img/eos.png'},\r\n  { name: 'Biance', level: 4, path: '/img/binance.png'},\r\n  { name: 'Polygon', level: 4, class: 'devicon-polygon-plain colored'},\r\n  { name: 'Truffle', level: 4, path: '/img/truffle.png'},\r\n  { name: 'Hardhat', level: 4, path: '/img/hard-hat.png'},\r\n  { name: 'Web3.js', level: 5, path: '/img/web3.png'},\r\n  { name: 'Ether.js', level: 3, path: '/img/ethereum_1.png'},\r\n  { name: 'MySQL', level: 5, class: 'devicon-mysql-original colored' },\r\n  { name: 'PostgreSQL', level: 4, class: 'devicon-postgresql-plain colored' },\r\n  { name: 'MongoDB', level: 4, class: 'devicon-mongodb-plain colored' },\r\n  { name: 'IPFS', level: 4, path: '/img/ipfs.svg'},\r\n  { name: 'Bitcoin', level: 4, path: '/img/bitcoin.png'},\r\n  { name: 'Solana', level: 3, path: '/img/solana.png'},\r\n  { name: 'Meme', level: 4, path: '/img/meme.png'},\r\n  { name: 'NFT', level: 5, path: '/img/nft.png'},\r\n  { name: 'DAO', level: 4, path: '/img/dao.png'},\r\n  { name: 'Defi', level: 4, path: '/img/defi.png'},\r\n  // Add your remaining skills here...\r\n];\r\n\r\nconst Whiz: React.FC = () => {\r\n  const [titleAnimationStart, setTitleAnimationStart] = useState(false); // State for title animation\r\n  const [visibleItem, setVisibleItem] = useState(0);\r\n\r\n  const sectionRef = useRef<HTMLDivElement>(null); // Ref for the section\r\n  const imgRef = useRef<HTMLDivElement>(null);\r\n  const hizRef = useRef<HTMLDivElement>(null);\r\n  const iRef = useRef<HTMLDivElement>(null);\r\n  const amRef = useRef<HTMLDivElement>(null);\r\n  const [animateEnabled, setAnimateEnabled] = useState(false);\r\n\r\n  const handleScroll = (entries: IntersectionObserverEntry[]) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        setTitleAnimationStart(true); // Start title animations when section is in view\r\n        setAnimateEnabled(false);\r\n\r\n        setTimeout(() => {\r\n          setAnimateEnabled(true);\r\n        }, 1000); // Initial delay before starting link animations\r\n        \r\n        let index = 0;\r\n        const interval = setInterval(() => {\r\n          if (index <= skills.length) {\r\n            setVisibleItem(index++);\r\n        } else {\r\n            clearInterval(interval); // Clear interval when done\r\n          }\r\n        }, 300);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleAnimation = (ref: React.RefObject<HTMLSpanElement>) => {\r\n    if (animateEnabled && ref.current) {\r\n      \r\n      // Check if the animation class is already present\r\n      if (ref.current.classList.contains('animate-yesIm')) {\r\n        return; // If already animated, early return\r\n      }\r\n      \r\n      const classes = Array.from(ref.current.classList); // Convert DOMTokenList to an array\r\n\r\n      // Remove all animate classes\r\n      classes.forEach(cls => {\r\n        if (cls.startsWith('animate') && ref.current) {\r\n          ref.current.classList.remove(cls);\r\n        }\r\n      });\r\n\r\n      // Add the new animation class\r\n      ref.current.classList.add('animate-yesIm');\r\n\r\n      // Remove the animation class after it finishes to allow re-triggering\r\n      setTimeout(() => {\r\n        ref.current?.classList.remove('animate-yesIm');\r\n\r\n      }, 1000); // Duration of the animation\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(handleScroll, { threshold: 0.1 });\r\n    if (sectionRef.current) {\r\n      observer.observe(sectionRef.current);\r\n    }\r\n    return () => {\r\n      if (sectionRef.current) {\r\n        observer.unobserve(sectionRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section ref={sectionRef} id=\"whiz\" className=\"w-full py-20\">\r\n      {/* Animated Header */}\r\n      <h2 className=\"text-4xl sm:text-6xl text-center flex justify-center items-center mb-20\">\r\n      <div\r\n          className={`w-[66px] sm:w-[100px] rounded-full cursor-pointer ${titleAnimationStart ? 'animate-slide-in-left' : 'invisible'} transition-all duration-300`}\r\n          onClick={() => handleAnimation(imgRef)}  ref={imgRef}\r\n        >\r\n          <img src={process.env.PUBLIC_URL + \"/img/ring-1_2.png\"} alt=\"logo\" className=\"grow-shrink-1\" />\r\n        </div>\r\n        <span onClick={() => handleAnimation(hizRef)} ref={hizRef} className={`z-10 transition-transform duration-1000 ${titleAnimationStart ? 'animate-slide-in-left' : 'invisible'}`}>\r\n          hiz\r\n        </span>\r\n        <span onClick={() => handleAnimation(iRef)} ref={iRef} className={`transition-transform duration-1000 ${titleAnimationStart ? 'animate-bounce' : 'invisible'}`}>\r\n           I \r\n        </span>\r\n        <span onClick={() => handleAnimation(amRef)} ref={amRef} className={`transition-transform duration-1000 ${titleAnimationStart ? 'animate-slide-in-right' : 'invisible'}`}>\r\n          am\r\n        </span>\r\n      </h2>\r\n      {/* Skills Grid */}\r\n      <div className=\"grid 2xl:grid-cols-6 xl:grid-cols-5 md:grid-cols-4 sm:grid-cols-3 grid-cols-3 gap-4 px-5 xl:p-0 md:px-20 sm:px-10\">\r\n        {skills.map((skill, index) => (\r\n          <div key={skill.name} className={`flex flex-col items-center text-md sm:text-2xl p-2 sm:p-5 skill-item transition duration-1000 ${visibleItem > index? 'opacity-100' : 'opacity-0'}`}>\r\n            <div>{skill.name}</div>\r\n            {skill.class ? <i className={`${skill.class} text-4xl sm:text-6xl`} /> : <img src={process.env.PUBLIC_URL + skill.path} alt={skill.name} className='w-[60px]' />}\r\n            {/* You can add icons for other skills here */}\r\n            <div>\r\n              {Array.from({ length: 5 }, (_, index) => (\r\n                <span key={index} className={`text-${index < skill.level ? 'yellow' : 'gray'}-500`}>★</span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Whiz;"],"names":["skills","name","level","class","path","Whiz","titleAnimationStart","setTitleAnimationStart","useState","visibleItem","setVisibleItem","sectionRef","useRef","imgRef","hizRef","iRef","amRef","animateEnabled","setAnimateEnabled","handleScroll","entries","forEach","entry","isIntersecting","setTimeout","index","interval","setInterval","length","clearInterval","handleAnimation","ref","current","classList","contains","Array","from","cls","startsWith","remove","add","_ref$current","useEffect","observer","IntersectionObserver","threshold","observe","unobserve","_jsxs","id","className","children","_jsx","onClick","src","process","alt","map","skill","_"],"sourceRoot":""}